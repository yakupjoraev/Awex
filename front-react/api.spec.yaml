openapi: 3.0.0
servers:
  - description: AWEX API
    url: https://awex.freeblock.site/api/0.0.1
info:
  description: AWEX API
  version: 0.0.1
  title: AWEX applications API
  contact:
    email: serg.paliy@gmail.com
  license:
    name: MIT
tags:
  - name: authenticated
    description: Secured by JSON web tokens
  - name: authorized
    description: Has specified role
  - name: common
    description: Operations available for regular users
paths:
  /:
    get:
      tags:
        - common
      summary: API Information
      operationId: info
      responses:
        "200":
          description: API Information
          content:
            application/json:
              schema:
                type: object
                items:
                  properties:
                    name:
                      type: string
                      description: Application name
                    version:
                      type: string
                      description: API version
                    description:
                      type: string
                      description: API description
  /account/auth/register:
    post:
      tags:
        - common
      summary: endpoint for user registration
      operationId: registration
      description: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: password
                email:
                  type: string
                  description: email
              required:
                - password
                - email
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/auth/sign-in:
    post:
      tags:
        - common
      summary: endpoint for user authentication
      operationId: login
      description: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: password
                email:
                  type: string
                  description: email
              required:
                - password
                - email
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  verified:
                    type: boolean
                    description: either email is verified or not,
                      if true - jwt token is provided
                  token:
                    type: string
                    description: is provided only if email is verified
                      should be used in "Authorization" header ( "Bearer token" )
                      for non common endpoints
                  expiration:
                    type: integer
                    description: unix timestamp until token is valid
                  otpRequired:
                    type: boolean
                    description: true if 2FA is on, if true request to the
                      | /account/otp/login with otp should be sent
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/auth/password-strength:
    post:
      tags:
        - common
      summary: endpoint for password strength check
      operationId: password-strength
      description: password strength check
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: password
              required:
                - password
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  score:
                    type: integer
                    description: password strength score (0, 1, 2, 3)
                  strength:
                    type: string
                    description: password strength description (very weak, weak, medium, strong)
                  valid:
                    type: boolean
                    description: true if valid for usage in application (medium, strong)
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/auth/confirm:
    post:
      tags:
        - common
      summary: endpoint for email confirmation
      operationId: confirm
      description: email confirmation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: confirmation code from link in email message
              required:
                - code
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/auth/resend:
    post:
      tags:
        - common
      summary: endpoint for confirmation email resending request
      operationId: resend
      description: confirmation email resending request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: email
              required:
                - email
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/auth/reset/send:
    post:
      tags:
        - common
      summary: endpoint for password reset email sending request
      operationId: send
      description: password reset email sending request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: email
              required:
                - email
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "409":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/auth/reset/confirm:
    post:
      tags:
        - common
      summary: endpoint for reset token obtaining
      operationId: reset-confirm
      description: reset token obtaining
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: reset code from link in email message
              required:
                - code
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  resetToken:
                    type: string
                    description: should be used for password reset
                      life time 1 hour
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/auth/reset/set:
    post:
      tags:
        - common
      summary: endpoint for password reset
      operationId: password-reset
      description: password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resetToken:
                  type: string
                  description: password
                oldPassword:
                  type: string
                  description: old password
                password:
                  type: string
                  description: new password
              required:
                - password
                - resetToken
                - oldPassword
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/otp/set-google-authenticator:
    post:
      tags:
        - authenticated
      summary: endpoint for setting google authenticator as 2fa method
      operationId: set-google-authenticator
      description: set google authenticator
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  uri:
                    type: string
                    description: google authenticator connection uri for QR generation
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/otp/set-gmail:
    post:
      tags:
        - authenticated
      summary: endpoint for setting gmail as 2fa method
      operationId: set-gmail
      description: set gmail
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: gmail account e-mail
              required:
                - email
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/otp/set-facebook:
    post:
      tags:
        - authenticated
      summary: endpoint for setting facebook as 2fa method
      operationId: set-facebook
      description: set facebook
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: string
                  description: code or access token obtained by the frontend
              required:
                - otp
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/otp/enable:
    post:
      tags:
        - authenticated
      summary: endpoint for enabling 2fa method
      operationId: otp-enable
      description: enabling 2fa method
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                _2faType:
                  type: string
                  enum: ["googleAuthenticator", "gmail", "facebook"]
                  description: 2fa type
                otp:
                  type: string
                  description: code or access token obtained by the frontend
              required:
                - _2faType
                - otp
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/otp/disable:
    post:
      tags:
        - authenticated
      summary: endpoint for disabling 2fa method
      operationId: otp-disable
      description: disabling 2fa method
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                _2faType:
                  type: string
                  enum: ["googleAuthenticator", "gmail", "facebook"]
                  description: 2fa type
              required:
                - _2faType
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/otp/enabled:
    get:
      tags:
        - authenticated
      summary: endpoint for getting of the list of enabled 2fa methods
      operationId: otp-enabled
      description: list of enabled 2fa methods
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                description: list of enabled 2fa methods
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/otp/validate:
    post:
      tags:
        - authenticated
      summary: endpoint for validating of the otp code
      operationId: otp-validate
      description: validating of the otp code
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                _2faType:
                  type: string
                  enum: ["googleAuthenticator", "gmail", "facebook"]
                  description: 2fa type
                otp:
                  type: string
                  description: one time password or facebook token
              required:
                - _2faType
                - otp
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/otp/send-gmail:
    post:
      tags:
        - authenticated
      summary: endpoint for sending otp to the gmail
      operationId: send-gmail
      description: sending otp to the gmail
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/otp/login:
    post:
      tags:
        - authenticated
      summary: endpoint for second 2fa step
      operationId: otp-login
      description: second 2fa step
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                _2faType:
                  type: string
                  enum: ["googleAuthenticator", "gmail", "facebook"]
                  description: 2fa type
                otp:
                  type: string
                  description: code or access token obtained by the frontend
              required:
                - _2faType
                - otp
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/ip:
    post:
      tags:
        - authenticated
      summary: endpoint for setting ip whitelist
      operationId: ip-set
      description: setting ip whitelist
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ipWhitelist:
                  type: array
                  items:
                    type: string
                  description: list of whitelisted ip,
                    if empty - whitelisting is disabled
              required:
                - ipWhitelist
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    get:
      tags:
        - authenticated
      summary: endpoint for getting ip whitelist
      operationId: ip-get
      description: ip whitelist
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  ip:
                    type: string
                    description: current ip address
                  ipWhitelist:
                    type: array
                    items:
                      type: string
                    description: list of whitelisted ip,
                      if empty - whitelisting is disabled
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/session/list:
    get:
      tags:
        - authenticated
      summary: endpoint for getting sessions list
      operationId: session-list
      description: sessions list
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: requested page number
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: current page number
                  pages:
                    type: integer
                    description: pages number
                  list:
                    type: array
                    description: list of sessions
                    items:
                      $ref: "#/components/schemas/Session"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/session/{id}/delete:
    post:
      tags:
        - authenticated
      summary: endpoint for deleting user session
      operationId: session-delete
      description: deleting user session
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: session id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/session/delete:
    post:
      tags:
        - authenticated
      summary: endpoint for deleting all user sessions except current
      operationId: session-delete-all
      description: deleting user sessions except current
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/profile/set-password:
    post:
      tags:
        - authenticated
      summary: endpoint for setting new password
      operationId: password-set
      description: password set
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                  description: old password
                password:
                  type: string
                  description: new password
              required:
                - password
                - oldPassword
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/profile:
    post:
      tags:
        - authenticated
      summary: endpoint for updating user profile data
      operationId: profile-set
      description: updating user profile data
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileData"
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    get:
      tags:
        - authenticated
      summary: endpoint for getting user profile data
      operationId: profile-get
      description: getting user profile data
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileData"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/profile/notifications:
    post:
      tags:
        - authenticated
      summary: endpoint for updating notifications settings
      operationId: notifications-set
      description: updating notifications settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    get:
      tags:
        - authenticated
      summary: endpoint for getting notifications settings
      operationId: notifications-get
      description: getting notifications settings
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/profile/currency:
    post:
      tags:
        - authenticated
      summary: endpoint for updating currency for displaying balance
      operationId: currency-set
      description: updating currency for displaying balance
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currency:
                  type: string
                  description: currency for displaying balance
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    get:
      tags:
        - authenticated
      summary: endpoint for getting currency for displaying balance
      operationId: currency-get
      description: getting currency for displaying balance
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  currency:
                    type: string
                    description: currency for displaying balance
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/config/settings:
    get:
      tags:
        - authenticated
      summary: endpoint for getting account settings (currencies list,
        permissions list, countries list, labels list etc.)
      operationId: settings-list
      description: getting settings list
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  countries:
                    type: array
                    items:
                      type: string
                  permissions:
                    type: array
                    items:
                      type: string
                  labels:
                    type: array
                    items:
                      type: string
                  roles:
                    type: array
                    items:
                      type: string
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/team:
    get:
      tags:
        - authorized
      summary: endpoint for getting team members list
      operationId: team-members-list
      description: team members list
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: requested page number
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: current page number
                  pages:
                    type: integer
                    description: pages number
                  list:
                    type: array
                    description: list of projects
                    items:
                      $ref: "#/components/schemas/TeamMember"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    post:
      tags:
        - authorized
      summary: endpoint for team members adding
      operationId: team-members-add
      description: team members adding
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: user name (is ignored for existing users)
                email:
                  type: string
                  description: user's email
                permissions:
                  description: team member permissions
                  type: array
                  items:
                    type: string
                label:
                  type: string
                  description: team member label
              required:
                - email
                - label
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/team/confirm:
    post:
      tags:
        - common
      summary: endpoint for a team membership confirmation
      operationId: team-membership-confirmation
      description: team membership confirmation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: confirmation code from link sent to email
              required:
                - code
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/team/{id}:
    get:
      tags:
        - authorized
      summary: endpoint for getting team member
      operationId: team-member-get
      description: getting team member
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: team membership id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMember"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    post:
      tags:
        - authorized
      summary: endpoint for team member settings updating
      operationId: team-member-set
      description: team member settings updating
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: project id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permissions:
                  type: array
                  description: team member permissions
                  items:
                    type: string
                label:
                  type: string
                  description: team member label
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/team/{id}/enable:
    post:
      tags:
        - authorized
      summary: endpoint for a team member enabling
      operationId: team-member-enable
      description: team member enabling
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: team member id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/team/{id}/disable:
    post:
      tags:
        - authorized
      summary: endpoint for a team member disabling
      operationId: team-member-disable
      description: team member disabling
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: team member id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/team/{id}/delete:
    post:
      tags:
        - authorized
      summary: endpoint for a team member deleting
      operationId: team-member-delete
      description: team member deleting
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: team member id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/admin:
    get:
      tags:
        - authorized
      summary: endpoint for getting administrators list
      operationId: admin-list
      description: administrators list
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: requested page number
        - in: query
          name: search
          schema:
            type: string
          description: email, id or name
        - in: query
          name: role
          schema:
            type: string
          description: admin role
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: current page number
                  pages:
                    type: integer
                    description: pages number
                  list:
                    type: array
                    description: list of projects
                    items:
                      $ref: "#/components/schemas/AdminList"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    post:
      tags:
        - authorized
      summary: endpoint for creating users by admin with granting
        admin roles
      operationId: user-create
      description: creating users by admin with granting admin roles
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: user email
                name:
                  type: string
                  description: user name
                roles:
                  type: array
                  items:
                    type: string
                    description: admin role
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/{id}/admin:
    get:
      tags:
        - authorized
      summary: endpoint for getting admin details
      operationId: admin-get
      description: getting admin details
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: admin id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminItem"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    post:
      tags:
        - authorized
      summary: endpoint for granting admin roles to user
      operationId: admin-update
      description: granting admin roles to user
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: project id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roles:
                  type: array
                  items:
                    type: string
                    description: admin roles
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/{id}/admin/enable:
    post:
      tags:
        - authorized
      summary: endpoint for enabling admin account
      operationId: admin-enable
      description: enabling admin account
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: admin id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/{id}/admin/disable:
    post:
      tags:
        - authorized
      summary: endpoint for disabling admin account
      operationId: admin-disable
      description: disabling admin account
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: admin id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/{id}/admin/delete:
    post:
      tags:
        - authorized
      summary: endpoint for deleting admin account
      operationId: admin-delete
      description: deleting admin account
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: admin id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/merchant:
    get:
      tags:
        - authorized
      summary: endpoint for getting merchants list
      operationId: merchant-list
      description: merchants list
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: requested page number
        - in: query
          name: search
          schema:
            type: string
          description: email, id or name
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: current page number
                  pages:
                    type: integer
                    description: pages number
                  list:
                    type: array
                    description: list of projects
                    items:
                      $ref: "#/components/schemas/MerchantList"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/{id}/merchant:
    get:
      tags:
        - authorized
      summary: endpoint for getting merchant details
      operationId: merchant-get
      description: getting merchant details
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: user id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantItem"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/{id}/merchant/enable:
    post:
      tags:
        - authorized
      summary: endpoint for enabling merchant account
      operationId: merchant-enable
      description: enabling merchant account
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: merchant id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/{id}/merchant/disable:
    post:
      tags:
        - authorized
      summary: endpoint for disabling merchant account
      operationId: merchant-disable
      description: disabling merchant account
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: merchant id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/{id}/merchant/delete:
    post:
      tags:
        - authorized
      summary: endpoint for deleting merchant account
      operationId: merchant-delete
      description: deleting merchant account
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: merchant id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/referral/link:
    get:
      tags:
        - authenticated
      summary: endpoint for getting referral link
      operationId: referral-link
      description: getting referral link
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  referralCode:
                    type: string
                    description: "code for referral link building"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/referral:
    get:
      tags:
        - authorized
      summary: endpoint for getting referrals list
      operationId: referrals-list
      description: getting referrals list
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: requested page number
        - in: query
          name: status
          schema:
            type: string
          description: referral status filter
        - in: query
          name: startTime
          schema:
            type: integer
          description: UTC timestamp for start time filter
        - in: query
          name: endTime
          schema:
            type: integer
          description: UTC timestamp for start time filter
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: current page number
                  pages:
                    type: integer
                    description: pages number
                  list:
                    type: array
                    description: list of referrals
                    items:
                      $ref: "#/components/schemas/ReferralList"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/referral/earnings:
    get:
      tags:
        - authorized
      summary: endpoint for getting earnings list
      operationId: earnings-list
      description: getting earnings list
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: requested page number
        - in: query
          name: type
          schema:
            type: string
          description: earnings type
        - in: query
          name: startTime
          schema:
            type: integer
          description: UTC timestamp for start time filter
        - in: query
          name: endTime
          schema:
            type: integer
          description: UTC timestamp for start time filter
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: current page number
                  pages:
                    type: integer
                    description: pages number
                  list:
                    type: array
                    description: list of referrals
                    items:
                      $ref: "#/components/schemas/EarningsList"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/referral/statistics:
    get:
      tags:
        - authenticated
      summary: endpoint for getting referral statistics
      operationId: referral-statistics
      description: getting referral statistics
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalReferralsNumber:
                    type: integer
                  activeReferralsNumber:
                    type: integer
                  earnings:
                    type: number
                  referralFees:
                    type: object
                    properties:
                      fromFees:
                        type: number
                        description: referral fees percentage
                          for a "fromFees" type
                      fromTurnover:
                        type: number
                        description: referral fees percentage
                          for a "fromTurnover" type
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /account/referral/admin/fees:
    get:
      tags:
        - authenticated
      summary: admin endpoint for getting referral fees
      operationId: admin-get-referral-fees
      description: getting referral fees
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  fromFees:
                    type: number
                    description: referral fees percentage
                      for a "fromFees" type
                  fromTurnover:
                    type: number
                    description: referral fees percentage
                      for a "fromTurnover" type
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    post:
      tags:
        - authorized
      summary: admin endpoint for setting referral fees
      operationId: admin-set-referral-fees
      description: setting referral fees
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fromFees:
                  type: number
                  description: referral fees percentage
                    for a "fromFees" type
                fromTurnover:
                  type: number
                  description: referral fees percentage
                    for a "fromTurnover" type
              required:
                - fromFees
                - fromTurnover
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /company:
    get:
      tags:
        - authorized
      summary: endpoint for getting companies list
      operationId: companies-list
      description: companies list
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: requested page number
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: current page number
                  pages:
                    type: integer
                    description: pages number
                  list:
                    type: array
                    description: list of projects
                    items:
                      $ref: "#/components/schemas/CompanyList"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    post:
      tags:
        - authorized
      summary: endpoint for creating company
      operationId: company-create
      description: creating company
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyItem"
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /company/{id}:
    get:
      tags:
        - authorized
      summary: endpoint for getting company
      operationId: company-get
      description: getting company
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: company id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyItem"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    post:
      tags:
        - authorized
      summary: endpoint for updating company
      operationId: company-update
      description: updating company
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: company id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyItem"
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /company/{id}/delete:
    post:
      tags:
        - authorized
      summary: endpoint for deleting company
      operationId: company-delete
      description: deleting company
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: company id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /fee:
    get:
      tags:
        - authorized
      summary: endpoint for a fee getting
      operationId: fee-get
      description: fee getting
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  current:
                    type: number
                    description: current fee
                  next:
                    type: number
                    description: upcoming fee
                    nullable: true
                  nextTimestamp:
                    type: integer
                    description: UNIX timestamp, time when upcoming fee
                      will be active
                    nullable: true
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    post:
      tags:
        - authorized
      summary: endpoint for a fee setting
      operationId: fee-set
      description: fee setting
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fee:
                  type: number
                  description: new fee
                timestamp:
                  type: integer
                  description: UNIX timestamp, time
                    when new fee should be enabled
              required:
                - timestamp
                - fee
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /fee/{id}:
    get:
      tags:
        - authorized
      summary: endpoint for a personal fee getting
      operationId: personal-fee-get
      description: personal fee getting
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: user id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  current:
                    type: number
                    description: current fee
                  next:
                    type: number
                    description: upcoming fee
                    nullable: true
                  nextTimestamp:
                    type: integer
                    description: UNIX timestamp, time when upcoming fee
                      will be active
                    nullable: true
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    post:
      tags:
        - authorized
      summary: endpoint for a personal fee setting
      operationId: personal-fee-set
      description: personal fee setting
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: user id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fee:
                  type: number
                  description: new fee
                timestamp:
                  type: integer
                  description: UNIX timestamp, time
                    when new fee should be enabled
              required:
                - timestamp
                - fee
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order:
    get:
      tags:
        - authorized
      summary: endpoint for getting orders list
      operationId: orders-list
      description: orders list
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: requested page number
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: current page number
                  pages:
                    type: integer
                    description: pages number
                  list:
                    type: array
                    description: list of orders
                    items:
                      $ref: "#/components/schemas/Order"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/invoice:
    post:
      tags:
        - authorized
      summary: endpoint for creating order
      operationId: order-create
      description: creating order
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: order name
                price:
                  type: number
                  description: order price in specified currency
                currency:
                  type: string
                  description: price currency,
                    | payment amount will be recalculated to USDT
                projectId:
                  type: integer
                  description: project identifier
                buyerIdentifier:
                  type: string
                  description: buyer identifier for reference
              required:
                - name
                - price
                - currency
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: created order id
                  uniqueId:
                    type: string
                    description: created order unique identifier for buyers
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/{id}:
    get:
      tags:
        - authorized
      summary: endpoint for getting order data
      operationId: order-get
      description: getting order data
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: order id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: order name
                  uniqueId:
                    type: string
                    description: created order unique identifier for buyers
                  amount:
                    type: number
                    description: quantity * product price
                  buyerIdentifier:
                    type: string
                    description: buyer identifier for reference
                  data:
                    type: object
                  payment_data:
                    type: object
                  paid:
                    type: boolean
                    description: true if order is paid
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/{id}/admin:
    get:
      tags:
        - authorized
      summary: endpoint for getting order data by admin
      operationId: admin-order-get
      description: getting order data by admin
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: order id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: order name
                  uniqueId:
                    type: string
                    description: created order unique identifier for buyers
                  amount:
                    type: number
                    description: quantity * product price
                  buyerIdentifier:
                    type: string
                    description: buyer identifier for reference
                  data:
                    type: object
                  payment_data:
                    type: object
                  paid:
                    type: boolean
                    description: true if order is paid
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/payment/{uniqueId}:
    get:
      tags:
        - common
      summary: endpoint for getting payment data for order
      operationId: order-payment-get
      description: getting payment data for order
      parameters:
        - in: path
          name: uniqueId
          description: order public unique id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  amount:
                    type: number
                    description: amount to be paid
                  paymentData:
                    type: object
                    properties:
                      currency:
                        type: string
                        description: payment asset name
                      chain:
                        type: string
                        description: payment asset network identifier
                      address:
                        type: string
                        description: payment address
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    post:
      tags:
        - common
      summary: endpoint for setting payment data for order
      operationId: order-payment-set
      description: setting payment data for order
      parameters:
        - in: path
          name: uniqueId
          description: order public unique id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: ["fiat", "crypto"]
                  description: payment type
                currency:
                  type: string
                  description: payment asset name
                chain:
                  type: string
                  description: payment asset network identifier
              required:
                - type
                - currency
                - chain
      responses:
        "200":
          description: payment data
          content:
            application/json:
              schema:
                type: object
                properties:
                  amount:
                    type: number
                    description: amount to be paid
                  paymentData:
                    type: object
                    properties:
                      currency:
                        type: string
                        description: payment asset name
                      chain:
                        type: string
                        description: payment asset network identifier
                      address:
                        type: string
                        description: payment address
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/deposit:
    get:
      tags:
        - authorized
      summary: endpoint for getting deposits list
      operationId: deposits-list
      description: getting deposits list
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: requested page number
        - in: query
          name: projectId
          schema:
            type: integer
          description: filter by project id
        - in: query
          name: status
          schema:
            type: string
          description: status filter
        - in: query
          name: startTime
          schema:
            type: integer
          description: UTC timestamp for start time filter
        - in: query
          name: endTime
          schema:
            type: integer
          description: UTC timestamp for start time filter
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: current page number
                  pages:
                    type: integer
                    description: pages number
                  list:
                    type: array
                    description: list of deposits
                    items:
                      $ref: "#/components/schemas/Order"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/deposit/request:
    get:
      tags:
        - authorized
      summary: endpoint for getting deposit requests list
      operationId: deposit-requests-list
      description: getting deposit requests list
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: requested page number
        - in: query
          name: projectId
          schema:
            type: integer
            description: filter by projectId
        - in: query
          name: startTime
          schema:
            type: integer
          description: UTC timestamp for start time filter
        - in: query
          name: endTime
          schema:
            type: integer
          description: UTC timestamp for start time filter
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: current page number
                  pages:
                    type: integer
                    description: pages number
                  list:
                    type: array
                    description: list of referrals
                    items:
                      $ref: "#/components/schemas/Order"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/{id}/deposit/request:
    post:
      tags:
        - authorized
      summary: endpoint for creating deposit request by merchant
        on behalf of user
      operationId: create-deposit-request
      description: creating of deposit request
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: order id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/{id}/deposit/return:
    post:
      tags:
        - authorized
      summary: endpoint for returning deposit
      operationId: return-deposit
      description: returning deposit
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: order id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/{id}/deposit/withhold:
    post:
      tags:
        - authorized
      summary: endpoint for creating withhold request
      operationId: create-withhold-request
      description: creating withhold request
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: order id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                withholdAmount:
                  type: number
                  description: amount that should be withheld
              required:
                - withholdAmount
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/{id}/deposit/document:
    post:
      tags:
        - authorized
      summary: endpoint for deposit withhold documents uploading
      operationId: withhold-request-upload
      description: deposit withhold documents uploading
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: order id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                upload:
                  type: string
                  format: binary
              required:
                - upload
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/{id}/deposit/document/{documentId}/delete:
    post:
      tags:
        - authorized
      summary: endpoint for deleting deposit withold request file
      operationId: deposit-withold-file-delete
      description: deleting deposit withold request file
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: order id
          required: true
          schema:
            type: string
        - in: path
          name: documentId
          description: uploaded document id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/deposit/withhold:
    get:
      tags:
        - authorized
      summary: endpoint for getting deposit withhold requests list
      operationId: withhold-requests-list
      description: getting deposit withhold requests list
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: requested page number
        - in: query
          name: projectId
          schema:
            type: integer
            description: filter by projectId
        - in: query
          name: startTime
          schema:
            type: integer
          description: UTC timestamp for start time filter
        - in: query
          name: endTime
          schema:
            type: integer
          description: UTC timestamp for start time filter
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: current page number
                  pages:
                    type: integer
                    description: pages number
                  list:
                    type: array
                    description: list of referrals
                    items:
                      $ref: "#/components/schemas/Order"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/deposit/withhold/admin:
    get:
      tags:
        - authorized
      summary: administrator endpoint for getting
        deposit withhold requests list
      operationId: admin-withhold-requests-list
      description: getting deposit withhold requests list by admin
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: requested page number
        - in: query
          name: projectId
          schema:
            type: integer
            description: filter by projectId
        - in: query
          name: startTime
          schema:
            type: integer
          description: UTC timestamp for start time filter
        - in: query
          name: endTime
          schema:
            type: integer
          description: UTC timestamp for start time filter
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: current page number
                  pages:
                    type: integer
                    description: pages number
                  list:
                    type: array
                    description: list of referrals
                    items:
                      $ref: "#/components/schemas/Order"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/{id}/deposit/withhold/info/admin:
    post:
      tags:
        - authorized
      summary: endpoint for requesting additional data
        for a withhold request
      operationId: withhold-request-info
      description: requesting additional data for a withhold request
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: order id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                info:
                  type: string
                  description: additional info request
              required:
                - info
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/{id}/deposit/withhold/approve/admin:
    post:
      tags:
        - authorized
      summary: endpoint for approving of the withhold request by admin
      operationId: approve-withhold-request
      description: approving of the withhold request by admin
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: order id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/{id}/deposit/withhold/reject/admin:
    post:
      tags:
        - authorized
      summary: endpoint for rejecting of the withhold request by admin
      operationId: reject-withhold-request
      description: rejecting of the withhold request by admin
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: order id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                withholdRejectReason:
                  type: string
                  description: withhold reject reason
              required:
                - withholdRejectReason
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/merchant/currencies:
    get:
      tags:
        - authorized
      summary: merchant endpoint for getting
        available currencies list
      operationId: merchant-currencies
      description: available currencies list
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: amount
          schema:
            type: string
          description: payment amount in selected currency
          required: false
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  currencies:
                    type: array
                    items:
                      type: object
                      properties:
                        currency:
                          type: string
                        name:
                          type: string
                        rate:
                          type: string
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/payment/currencies:
    get:
      tags:
        - common
      summary: endpoint for getting available currencies list
      operationId: payment-currencies
      description: available currencies list
      parameters:
        - in: query
          name: amount
          schema:
            type: string
          description: payment amount in usdt
          required: false
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  currencies:
                    type: array
                    items:
                      type: object
                      properties:
                        currency:
                          type: string
                        name:
                          type: string
                        rate:
                          type: string
                        chain:
                          type: string
                          description: chain unique name, should be passed for
                            payment setting
                        chainName:
                          type: string
                          description: display name for a chain
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/merchant/usdt-rate:
    get:
      tags:
        - authorized
      summary: merchant endpoint for getting specified currency rate in usdt
      operationId: merchant-usdt-rate
      description: specified currency rate in usdt
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: amount
          schema:
            type: string
          description: payment amount in selected currency
          required: true
        - in: query
          name: currency
          schema:
            type: string
          description: currency symbol
          required: true
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  currencies:
                    type: array
                    items:
                      type: object
                      properties:
                        rate:
                          type: string
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /order/payment/usdt-rate:
    get:
      tags:
        - common
      summary: endpoint for getting rate of payment currency in usdt
      operationId: payment-usdt-rate
      description: rate of payment currency in usdt
      parameters:
        - in: query
          name: amount
          schema:
            type: string
          description: payment amount in usdt
          required: true
        - in: query
          name: rate
          schema:
            type: string
          description: payment currency rate in usdt
          required: true
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  currencies:
                    type: array
                    items:
                      type: object
                      properties:
                        currency:
                          type: string
                        name:
                          type: string
                        rate:
                          type: string
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /project:
    get:
      tags:
        - authorized
      summary: endpoint for getting projects list
      operationId: projects-list
      description: projects list
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: requested page number
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: current page number
                  pages:
                    type: integer
                    description: pages number
                  list:
                    type: array
                    description: list of projects
                    items:
                      $ref: "#/components/schemas/ProjectList"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    post:
      tags:
        - authorized
      summary: endpoint for creating project
      operationId: project-create
      description: creating project
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectData"
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /project/{id}:
    get:
      tags:
        - authorized
      summary: endpoint for getting project
      operationId: project-get
      description: getting project
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: project id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectItem"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
    post:
      tags:
        - authorized
      summary: endpoint for updating project
      operationId: project-update
      description: updating project
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: project id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectData"
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /project/{id}/request-validation:
    post:
      tags:
        - authorized
      summary: endpoint for sending project for validation
      operationId: project-validate
      description: sending project for validation
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: project id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        409:
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /project/{id}/delete:
    post:
      tags:
        - authorized
      summary: endpoint for deleting project
      operationId: project-delete
      description: deleting project
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: project id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result description
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /project/admin:
    get:
      tags:
        - authorized
      summary: administrator endpoint for getting projects list
      operationId: admin-projects-list
      description: administrator projects list
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: string
          description: requested page number
        - in: query
          name: status
          schema:
            type: string
          description: validation status
        - in: query
          name: search
          schema:
            type: string
          description: search string (merchant id, name, inn, address)
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: current page number
                  pages:
                    type: integer
                    description: pages number
                  list:
                    type: array
                    description: list of projects
                    items:
                      $ref: "#/components/schemas/ProjectListAdmin"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /project/{id}/admin:
    post:
      tags:
        - authorized
      summary: administrator endpoint for getting project
      operationId: administrator-project-get
      description: administrator getting project
        (resource state can be changed)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: project id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectItemAdmin"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /project/{id}/admin/request:
    post:
      tags:
        - authorized
      summary: administrator endpoint for requesting additional data
      operationId: administrator-project-request
      description: requesting additional data by administrator
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: project id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  type: string
                  description: additional data request
              required:
                - request
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /project/{id}/admin/approve:
    post:
      tags:
        - authorized
      summary: administrator endpoint for approving
        of the validation request
      operationId: administrator-project-approve
      description: approving of the validation request
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: project id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /project/{id}/admin/reject:
    post:
      tags:
        - authorized
      summary: administrator endpoint for rejection
        of the validation request
      operationId: administrator-project-reject
      description: rejection of the validation request
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: project id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: rejection reason
              required:
                - reason
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: request result
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /project/admin/statuses:
    get:
      tags:
        - authorized
      summary: administrator endpoint for getting validation statuses list
      operationId: admin-projects-statuses-list
      description: administrator projects validation statuses list
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: validation status
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /project/currencies:
    get:
      tags:
        - authorized
      summary: endpoint for getting currencies list
      operationId: currencies-list
      description: getting currencies list
      security:
        - BearerAuth: []
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  convertTo:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: currency name
                        type:
                          type: string
                          description: currency type
                          enum: ["fiat", "crypto"]
                  order:
                    type: array
                    items:
                      type: string
                      description: available currency for creating order
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /statistics:
    get:
      tags:
        - authorized
      summary: administrator endpoint for common statistics
      operationId: common-statistics
      description: common statistics
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: startTime
          description: time filter
          required: false
          schema:
            type: string
        - in: query
          name: endTime
          description: time filter
          required: false
          schema:
            type: string
        - in: query
          name: search
          description: search string
          required: false
          schema:
            type: string
        - in: query
          name: currency
          description: filter by currency
          required: false
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Statistics"
        "400":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
  /statistics/{id}:
    get:
      tags:
        - authorized
      summary: administrator endpoint for personal statistics
      operationId: personal-statistics
      description: personal statistics
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: order id
          required: true
          schema:
            type: string
        - in: query
          name: startTime
          description: time filter
          required: false
          schema:
            type: string
        - in: query
          name: endTime
          description: time filter
          required: false
          schema:
            type: string
        - in: query
          name: search
          description: search string
          required: false
          schema:
            type: string
        - in: query
          name: currency
          description: filter by currency
          required: false
          schema:
            type: string
      responses:
        "200":
          description: request succeeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Statistics"
        "403":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
        "404":
          description: request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    description: errors descriptions
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Authorisation header with JWT token
        using the Bearer scheme
  schemas:
    Session:
      type: object
      properties:
        id:
          type: integer
          description: session id
        data:
          type: object
          description: session data
          properties:
            browser:
              type: object
              description: browser and os data of request
                when session was created
            ip:
              type: string
              description: ip of request when session was created
            geo:
              type: object
              description: browser and os data of request
                when session was created
    Project:
      type: object
      nullable: true
      properties:
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        feePayee:
          type: boolean
          description: true is merchant is fee payee
        paymentBills:
          type: boolean
          description: true if payment bills are enabled
        paymentWeb:
          type: boolean
          description: true if web payments are enabled
        paymentTelegram:
          type: boolean
          description: true if telegram payments are enabled
        activity:
          type: string
          description: activity
        convertTo:
          type: string
          enum: ["fiat", "stablecoin"]
          description: currency for payments to be converted to
        currency:
          type: string
          description: currency
        cms:
          type: string
          description: cms
        urlWeb:
          type: string
          description: web url
        urlNotification:
          type: string
          description: notification url
        urlPaymentSuccess:
          type: string
          description: Success payment hook url
        urlPaymentFailure:
          type: string
          description: Failure payment hook url
      required:
        - name
    ProjectData:
      type: object
      nullable: true
      properties:
        companyId:
          type: integer
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        feePayee:
          type: boolean
          description: true is merchant is fee payee
        paymentBills:
          type: boolean
          description: true if payment bills are enabled
        paymentWeb:
          type: boolean
          description: true if web payments are enabled
        paymentTelegram:
          type: boolean
          description: true if telegram payments are enabled
        activity:
          type: string
          description: activity
        convertTo:
          type: string
          enum: ["fiat", "stablecoin"]
          description: currency for payments to be converted to
        currency:
          type: string
          description: currency
        cms:
          type: string
          description: cms
        urlWeb:
          type: string
          description: web url
        urlNotification:
          type: string
          description: notification url
        urlPaymentSuccess:
          type: string
          description: Success payment hook url
        urlPaymentFailure:
          type: string
          description: Failure payment hook url
      required:
        - name
    CompanyList:
      type: object
      properties:
        id:
          type: integer
          description: company id
        companyName:
          type: string
    CompanyItem:
      type: object
      properties:
        companyName:
          type: string
        legalAddress:
          type: string
        country:
          type: string
        taxId:
          type: string
        phone:
          type: string
        web:
          type: string
        bankAccount:
          type: string
      required:
        - companyName
        - legalAddress
        - country
        - taxId
        - phone
        - web
        - bankAccount
    ProjectValidation:
      type: object
      nullable: true
      properties:
        status:
          type: string
          description: validation status
          enum: ["onReview", "waiting", "approved", "rejected"]
          nullable: true
        request:
          type: string
          description: Data request from administrator
          nullable: true
        rejectReason:
          type: string
          description: Reason if rejected
          nullable: true
    ProjectValidationAdmin:
      type: object
      nullable: true
      properties:
        status:
          type: string
          description: validation status
          enum: ["new", "read", "wait", "approved", "rejected"]
          nullable: true
        request:
          type: string
          description: Data request from administrator
          nullable: true
        reject:
          type: object
          nullable: true
          properties:
            reason:
              type: string
              description: reject reason
            userId:
              type: integer
              description: administrator id
            timestamp:
              type: integer
              description: UNIX timestamp, time of rejection
        approve:
          type: object
          nullable: true
          properties:
            userId:
              type: integer
              description: administrator id
            timestamp:
              type: integer
              description: UNIX timestamp, time of approval
    ProjectList:
      type: object
      properties:
        id:
          type: integer
          description: record id
        data:
          $ref: "#/components/schemas/Project"
        draft:
          $ref: "#/components/schemas/Project"
    ProjectListAdmin:
      type: object
      properties:
        id:
          type: integer
          description: record id
        data:
          $ref: "#/components/schemas/Project"
        draft:
          $ref: "#/components/schemas/Project"
        validation:
          $ref: "#/components/schemas/ProjectValidationAdmin"
    ProjectItem:
      type: object
      properties:
        companyId:
          type: integer
        data:
          $ref: "#/components/schemas/Project"
        draft:
          $ref: "#/components/schemas/Project"
        validationRequestedAt:
          type: integer
          description: UNIX timestamp, time when request was sent
          nullable: true
        validation:
          $ref: "#/components/schemas/ProjectValidation"
    ProjectItemAdmin:
      type: object
      properties:
        userId:
          type: integer
          description: user id
        data:
          $ref: "#/components/schemas/Project"
        draft:
          $ref: "#/components/schemas/Project"
        company:
          $ref: "#/components/schemas/CompanyItem"
        validationRequestedAt:
          type: integer
          description: UNIX timestamp, time when request was sent
          nullable: true
        validation:
          $ref: "#/components/schemas/ProjectValidationAdmin"
    Order:
      type: object
      properties:
        id:
          type: integer
          description: order id
        data:
          type: object
          description: order data
          properties:
            name:
              type: string
              description: order name
            price:
              type: number
              description: order price in specified currency
            currency:
              type: string
              description: order currency
            rate:
              type: number
              description: order currency rate to USDT
        deposit:
          type: object
          description: deposit data
          properties:
            name:
              type: string
              description: order name
            amount:
              type: number
              description: deposit amount in initial currency
            currency:
              type: string
              description: order currency
            rate:
              type: number
              description: order currency rate to USDT
            returnTime:
              type: integer
              description: UTC timestamp of the deposit return time
        amount:
          type: number
          description: price * rate
        buyerIdentifier:
          type: string
          description: buyer identifier for reference
    ProfileData:
      type: object
      description: profile display information
      properties:
        name:
          type: string
        email:
          type: string
        telegram:
          type: string
        displayCurrency:
          type: string
      required:
        - name
        - email
        - telegram
        - displayCurrency
    Notification:
      type: object
      properties:
        email:
          type: boolean
          description: if true - notifications of this type
            are enabled, disabled otherwise
        telegram:
          type: boolean
          description: if true - notifications of this type
            are enabled, disabled otherwise
        vk:
          type: boolean
          description: if true - notifications of this type
            are enabled, disabled otherwise
        google:
          type: boolean
          description: if true - notifications of this type
            are enabled, disabled otherwise
        apple:
          type: boolean
          description: if true - notifications of this type
            are enabled, disabled otherwise
      required:
        - email
        - telegram
        - vk
        - google
        - apple
    TeamMember:
      type: object
      description: team member data
      properties:
        name:
          type: string
          nullable: true
        email:
          type: string
        permissions:
          description: team member permissions
          type: array
          items:
            type: string
        label:
          description: team member label
          type: string
        enabled:
          description: true if team member enabled
          type: boolean
          nullable: true
        confirmed_at:
          type: integer
          nullable: true
      required:
        - email
        - label
    AdminList:
      type: object
      description: user data
      properties:
        id:
          type: integer
          description: user id
        email:
          type: string
          description: user email
        roles:
          type: array
          items:
            type: string
            description: admin roles
        data:
          $ref: "#/components/schemas/ProfileData"
        enabled:
          type: boolean
          description: if false - user is blocked
        createdAt:
          type: integer
          description: UTC timestamp
    AdminItem:
      type: object
      description: user data
      properties:
        email:
          type: string
        roles:
          type: array
          items:
            type: string
            description: admin roles
        data:
          $ref: "#/components/schemas/ProfileData"
        enabled:
          type: boolean
          description: if false - user is blocked
        createdAt:
          type: integer
          description: UTC timestamp
    MerchantList:
      type: object
      description: user data
      properties:
        id:
          type: integer
          description: user id
        email:
          type: string
          description: user email
        data:
          $ref: "#/components/schemas/ProfileData"
        enabled:
          type: boolean
          description: if false - user is blocked
        fee:
          type: number
          description: individual fee
        createdAt:
          type: integer
          description: UTC timestamp
    MerchantItem:
      type: object
      description: user data
      properties:
        email:
          type: string
        data:
          $ref: "#/components/schemas/ProfileData"
        enabled:
          type: boolean
          description: if false - user is blocked
        fee:
          type: number
          description: individual fee
        createdAt:
          type: integer
          description: UTC timestamp
    Statistics:
      type: object
      description: statistics
      properties:
        invoiceNumber:
          type: number
        invoiceAverage:
          type: number
          nullable: true
        invoiceTotal:
          type: number
        invoiceCompletedPercent:
          type: number
        depositAverage:
          type: number
          nullable: true
        depositNumber:
          type: number
        depositInWork:
          type: number
        depositCompleted:
          type: number
        depositTotal:
          type: number
        depositWithholded:
          type: number
        referralAverage:
          type: number
          nullable: true
        referralNumber:
          type: number
        referralActiveNumber:
          type: number
        referralFromFees:
          type: number
        referralFromTurnover:
          type: number
    ReferralList:
      type: object
      description: referral data
      properties:
        referralId:
          type: integer
          description: referral account id
        createdAt:
          type: integer
          description: registration date
        status:
          type: string
          enum: ["active", "inActive"]
          description: active if earnings > 0, inActive otherwise
        amount:
          type: number
          description: earnings from this referral
    EarningsList:
      type: object
      description: earnings data
      properties:
        referralId:
          type: integer
          description: referral account id for these earnings
        createdAt:
          type: integer
          description: earnings accrual date
        type:
          type: string
          enum: ["active", "inActive"]
          description: active if earnings > 0, inActive otherwise
        amount:
          type: number
          description: earnings amount
